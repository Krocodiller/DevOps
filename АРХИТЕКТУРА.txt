🏥 АРХИТЕКТУРА МЕДИЦИНСКОГО КООПЕРАТИВА

┌─────────────────────────────────────────────────────────────┐
│                    ВЕБ-ИНТЕРФЕЙС (Frontend)                 │
├─────────────────────────────────────────────────────────────┤
│  HTML5 + CSS3 + JavaScript (Vanilla)                       │
│  • Современный responsive дизайн                           │
│  • Вкладки: Пациенты, Врачи, Лекарства, Визиты, Аналитика │
│  • AJAX запросы к API                                      │
│  • Валидация форм на клиенте                               │
└─────────────────────────────────────────────────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────┐
│                    FLASK API (Backend)                      │
├─────────────────────────────────────────────────────────────┤
│  • RESTful API endpoints                                    │
│  • Обработка HTTP запросов                                 │
│  • Валидация данных                                         │
│  • Бизнес-логика                                            │
│  • CORS поддержка                                           │
└─────────────────────────────────────────────────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────┐
│                    SQLALCHEMY ORM                           │
├─────────────────────────────────────────────────────────────┤
│  • Объектно-реляционное отображение                        │
│  • Управление моделями данных                              │
│  • Связи между таблицами                                   │
│  • Миграции базы данных                                     │
└─────────────────────────────────────────────────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────┐
│                    SQLITE DATABASE                          │
├─────────────────────────────────────────────────────────────┤
│  Таблицы:                                                   │
│  • Patient (пациенты)                                       │
│  • Doctor (врачи)                                           │
│  • Medicine (лекарства)                                     │
│  • Visit (визиты)                                           │
│  • Prescription (рецепты)                                   │
└─────────────────────────────────────────────────────────────┘

📊 МОДЕЛИ ДАННЫХ:

Patient (Пациенты):
├── id (Primary Key)
├── name (Имя)
├── gender (Пол)
├── birth_date (Дата рождения)
└── address (Адрес)

Doctor (Врачи):
├── id (Primary Key)
└── name (Имя врача)

Medicine (Лекарства):
├── id (Primary Key)
├── name (Название)
├── usage_method (Способ приема)
├── description (Описание действия)
└── side_effects (Побочные эффекты)

Visit (Визиты):
├── id (Primary Key)
├── date (Дата визита)
├── location (Место проведения)
├── symptoms (Симптомы)
├── diagnosis (Диагноз)
├── prescriptions_text (Предписания)
├── patient_id (Foreign Key → Patient)
└── doctor_id (Foreign Key → Doctor)

Prescription (Рецепты):
├── id (Primary Key)
├── visit_id (Foreign Key → Visit)
└── medicine_id (Foreign Key → Medicine)

🔗 СВЯЗИ:
• Patient 1:N Visit (один пациент - много визитов)
• Doctor 1:N Visit (один врач - много визитов)
• Visit 1:N Prescription (один визит - много рецептов)
• Medicine 1:N Prescription (одно лекарство - много рецептов)

🚀 API ENDPOINTS:

CRUD операции:
• GET/POST /api/patients
• GET/POST /api/doctors
• GET/POST /api/medicines
• GET/POST /api/visits

Аналитические функции:
• POST /api/visits/count-by-date
• POST /api/patients/count-by-diagnosis
• GET /api/medicines/<id>/side-effects

Дополнительные функции:
• GET /api/statistics
• GET /api/popular-diagnoses
• GET /api/popular-medicines
• GET /api/search-patients
• GET /api/patient/<id>/history

🎯 ФУНКЦИОНАЛЬНЫЕ ТРЕБОВАНИЯ:

✅ 1. Количество вызовов по дате
✅ 2. Количество больных по болезни
✅ 3. Побочные эффекты лекарства
✅ 4. Добавление нового лекарства

➕ ДОПОЛНИТЕЛЬНЫЙ ФУНКЦИОНАЛ:
• Общая статистика системы
• Популярные диагнозы и лекарства
• Поиск пациентов
• История визитов пациента
• Валидация данных
• Современный UI/UX

🔧 ТЕХНИЧЕСКИЕ ОСОБЕННОСТИ:
• Локальная SQLite база данных
• Автоматическая инициализация с тестовыми данными
• Responsive дизайн для всех устройств
• Обработка ошибок и валидация
• CORS поддержка для API
• Модульная архитектура с утилитами

📱 ПОЛЬЗОВАТЕЛЬСКИЙ ИНТЕРФЕЙС:
• Интуитивно понятная навигация по вкладкам
• Формы с валидацией
• Таблицы с данными
• Аналитические панели
• Уведомления об успехе/ошибках
• Адаптивный дизайн
